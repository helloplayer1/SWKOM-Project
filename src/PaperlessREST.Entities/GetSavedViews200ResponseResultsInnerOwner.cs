/*
 * Paperless Rest Server
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using PaperlessREST.Entities.Converters;

namespace PaperlessREST.Entities
{
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
<<<<<<<< HEAD:src/PaperlessREST.Entities/InlineResponse20021Owner.cs
    public partial class InlineResponse20021Owner : IEquatable<InlineResponse20021Owner>
========
    public partial class GetSavedViews200ResponseResultsInnerOwner : IEquatable<GetSavedViews200ResponseResultsInnerOwner>
>>>>>>>> dev:src/PaperlessREST.Entities/GetSavedViews200ResponseResultsInnerOwner.cs
    {
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [Required]
<<<<<<<< HEAD:src/PaperlessREST.Entities/InlineResponse20021Owner.cs

        [DataMember(Name = "id")]
        public int? Id { get; set; }
========
        [DataMember(Name = "id", EmitDefaultValue = true)]
        public int Id { get; set; }
>>>>>>>> dev:src/PaperlessREST.Entities/GetSavedViews200ResponseResultsInnerOwner.cs

        /// <summary>
        /// Gets or Sets Password
        /// </summary>
        [Required]
<<<<<<<< HEAD:src/PaperlessREST.Entities/InlineResponse20021Owner.cs

        [DataMember(Name = "password")]
========
        [DataMember(Name = "password", EmitDefaultValue = false)]
>>>>>>>> dev:src/PaperlessREST.Entities/GetSavedViews200ResponseResultsInnerOwner.cs
        public string Password { get; set; }

        /// <summary>
        /// Gets or Sets LastLogin
        /// </summary>
        [Required]
<<<<<<<< HEAD:src/PaperlessREST.Entities/InlineResponse20021Owner.cs

        [DataMember(Name = "last_login")]
========
        [DataMember(Name = "last_login", EmitDefaultValue = false)]
>>>>>>>> dev:src/PaperlessREST.Entities/GetSavedViews200ResponseResultsInnerOwner.cs
        public string LastLogin { get; set; }

        /// <summary>
        /// Gets or Sets IsSuperuser
        /// </summary>
        [Required]
<<<<<<<< HEAD:src/PaperlessREST.Entities/InlineResponse20021Owner.cs

        [DataMember(Name = "is_superuser")]
        public bool? IsSuperuser { get; set; }
========
        [DataMember(Name = "is_superuser", EmitDefaultValue = true)]
        public bool IsSuperuser { get; set; }
>>>>>>>> dev:src/PaperlessREST.Entities/GetSavedViews200ResponseResultsInnerOwner.cs

        /// <summary>
        /// Gets or Sets Username
        /// </summary>
        [Required]
<<<<<<<< HEAD:src/PaperlessREST.Entities/InlineResponse20021Owner.cs

        [DataMember(Name = "username")]
========
        [DataMember(Name = "username", EmitDefaultValue = false)]
>>>>>>>> dev:src/PaperlessREST.Entities/GetSavedViews200ResponseResultsInnerOwner.cs
        public string Username { get; set; }

        /// <summary>
        /// Gets or Sets FirstName
        /// </summary>
        [Required]
<<<<<<<< HEAD:src/PaperlessREST.Entities/InlineResponse20021Owner.cs

        [DataMember(Name = "first_name")]
========
        [DataMember(Name = "first_name", EmitDefaultValue = false)]
>>>>>>>> dev:src/PaperlessREST.Entities/GetSavedViews200ResponseResultsInnerOwner.cs
        public string FirstName { get; set; }

        /// <summary>
        /// Gets or Sets LastName
        /// </summary>
        [Required]
<<<<<<<< HEAD:src/PaperlessREST.Entities/InlineResponse20021Owner.cs

        [DataMember(Name = "last_name")]
========
        [DataMember(Name = "last_name", EmitDefaultValue = false)]
>>>>>>>> dev:src/PaperlessREST.Entities/GetSavedViews200ResponseResultsInnerOwner.cs
        public string LastName { get; set; }

        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [Required]
<<<<<<<< HEAD:src/PaperlessREST.Entities/InlineResponse20021Owner.cs

        [DataMember(Name = "email")]
========
        [DataMember(Name = "email", EmitDefaultValue = false)]
>>>>>>>> dev:src/PaperlessREST.Entities/GetSavedViews200ResponseResultsInnerOwner.cs
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets IsStaff
        /// </summary>
        [Required]
<<<<<<<< HEAD:src/PaperlessREST.Entities/InlineResponse20021Owner.cs

        [DataMember(Name = "is_staff")]
        public bool? IsStaff { get; set; }
========
        [DataMember(Name = "is_staff", EmitDefaultValue = true)]
        public bool IsStaff { get; set; }
>>>>>>>> dev:src/PaperlessREST.Entities/GetSavedViews200ResponseResultsInnerOwner.cs

        /// <summary>
        /// Gets or Sets IsActive
        /// </summary>
        [Required]
<<<<<<<< HEAD:src/PaperlessREST.Entities/InlineResponse20021Owner.cs

        [DataMember(Name = "is_active")]
        public bool? IsActive { get; set; }
========
        [DataMember(Name = "is_active", EmitDefaultValue = true)]
        public bool IsActive { get; set; }
>>>>>>>> dev:src/PaperlessREST.Entities/GetSavedViews200ResponseResultsInnerOwner.cs

        /// <summary>
        /// Gets or Sets DateJoined
        /// </summary>
        [Required]
<<<<<<<< HEAD:src/PaperlessREST.Entities/InlineResponse20021Owner.cs

        [DataMember(Name = "date_joined")]
========
        [DataMember(Name = "date_joined", EmitDefaultValue = false)]
>>>>>>>> dev:src/PaperlessREST.Entities/GetSavedViews200ResponseResultsInnerOwner.cs
        public string DateJoined { get; set; }

        /// <summary>
        /// Gets or Sets Groups
        /// </summary>
        [Required]
<<<<<<<< HEAD:src/PaperlessREST.Entities/InlineResponse20021Owner.cs

        [DataMember(Name = "groups")]
========
        [DataMember(Name = "groups", EmitDefaultValue = false)]
>>>>>>>> dev:src/PaperlessREST.Entities/GetSavedViews200ResponseResultsInnerOwner.cs
        public List<object> Groups { get; set; }

        /// <summary>
        /// Gets or Sets UserPermissions
        /// </summary>
        [Required]
<<<<<<<< HEAD:src/PaperlessREST.Entities/InlineResponse20021Owner.cs

        [DataMember(Name = "user_permissions")]
        public List<int?> UserPermissions { get; set; }
========
        [DataMember(Name = "user_permissions", EmitDefaultValue = false)]
        public List<int> UserPermissions { get; set; }
>>>>>>>> dev:src/PaperlessREST.Entities/GetSavedViews200ResponseResultsInnerOwner.cs

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetSavedViews200ResponseResultsInnerOwner {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Password: ").Append(Password).Append("\n");
            sb.Append("  LastLogin: ").Append(LastLogin).Append("\n");
            sb.Append("  IsSuperuser: ").Append(IsSuperuser).Append("\n");
            sb.Append("  Username: ").Append(Username).Append("\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  LastName: ").Append(LastName).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  IsStaff: ").Append(IsStaff).Append("\n");
            sb.Append("  IsActive: ").Append(IsActive).Append("\n");
            sb.Append("  DateJoined: ").Append(DateJoined).Append("\n");
            sb.Append("  Groups: ").Append(Groups).Append("\n");
            sb.Append("  UserPermissions: ").Append(UserPermissions).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((GetSavedViews200ResponseResultsInnerOwner)obj);
        }

        /// <summary>
        /// Returns true if GetSavedViews200ResponseResultsInnerOwner instances are equal
        /// </summary>
        /// <param name="other">Instance of GetSavedViews200ResponseResultsInnerOwner to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetSavedViews200ResponseResultsInnerOwner other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return
                (
                    Id == other.Id ||

                    Id.Equals(other.Id)
                ) &&
                (
                    Password == other.Password ||
                    Password != null &&
                    Password.Equals(other.Password)
                ) &&
                (
                    LastLogin == other.LastLogin ||
                    LastLogin != null &&
                    LastLogin.Equals(other.LastLogin)
                ) &&
                (
                    IsSuperuser == other.IsSuperuser ||

                    IsSuperuser.Equals(other.IsSuperuser)
                ) &&
                (
                    Username == other.Username ||
                    Username != null &&
                    Username.Equals(other.Username)
                ) &&
                (
                    FirstName == other.FirstName ||
                    FirstName != null &&
                    FirstName.Equals(other.FirstName)
                ) &&
                (
                    LastName == other.LastName ||
                    LastName != null &&
                    LastName.Equals(other.LastName)
                ) &&
                (
                    Email == other.Email ||
                    Email != null &&
                    Email.Equals(other.Email)
                ) &&
                (
                    IsStaff == other.IsStaff ||

                    IsStaff.Equals(other.IsStaff)
                ) &&
                (
                    IsActive == other.IsActive ||

                    IsActive.Equals(other.IsActive)
                ) &&
                (
                    DateJoined == other.DateJoined ||
                    DateJoined != null &&
                    DateJoined.Equals(other.DateJoined)
                ) &&
                (
                    Groups == other.Groups ||
                    Groups != null &&
                    other.Groups != null &&
                    Groups.SequenceEqual(other.Groups)
                ) &&
                (
                    UserPermissions == other.UserPermissions ||
                    UserPermissions != null &&
                    other.UserPermissions != null &&
                    UserPermissions.SequenceEqual(other.UserPermissions)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
<<<<<<<< HEAD:src/PaperlessREST.Entities/InlineResponse20021Owner.cs
                if (Id != null)
                    hashCode = hashCode * 59 + Id.GetHashCode();
========

                hashCode = hashCode * 59 + Id.GetHashCode();
>>>>>>>> dev:src/PaperlessREST.Entities/GetSavedViews200ResponseResultsInnerOwner.cs
                if (Password != null)
                    hashCode = hashCode * 59 + Password.GetHashCode();
                if (LastLogin != null)
                    hashCode = hashCode * 59 + LastLogin.GetHashCode();
<<<<<<<< HEAD:src/PaperlessREST.Entities/InlineResponse20021Owner.cs
                if (IsSuperuser != null)
                    hashCode = hashCode * 59 + IsSuperuser.GetHashCode();
========

                hashCode = hashCode * 59 + IsSuperuser.GetHashCode();
>>>>>>>> dev:src/PaperlessREST.Entities/GetSavedViews200ResponseResultsInnerOwner.cs
                if (Username != null)
                    hashCode = hashCode * 59 + Username.GetHashCode();
                if (FirstName != null)
                    hashCode = hashCode * 59 + FirstName.GetHashCode();
                if (LastName != null)
                    hashCode = hashCode * 59 + LastName.GetHashCode();
                if (Email != null)
                    hashCode = hashCode * 59 + Email.GetHashCode();
<<<<<<<< HEAD:src/PaperlessREST.Entities/InlineResponse20021Owner.cs
                if (IsStaff != null)
                    hashCode = hashCode * 59 + IsStaff.GetHashCode();
                if (IsActive != null)
                    hashCode = hashCode * 59 + IsActive.GetHashCode();
========

                hashCode = hashCode * 59 + IsStaff.GetHashCode();

                hashCode = hashCode * 59 + IsActive.GetHashCode();
>>>>>>>> dev:src/PaperlessREST.Entities/GetSavedViews200ResponseResultsInnerOwner.cs
                if (DateJoined != null)
                    hashCode = hashCode * 59 + DateJoined.GetHashCode();
                if (Groups != null)
                    hashCode = hashCode * 59 + Groups.GetHashCode();
                if (UserPermissions != null)
                    hashCode = hashCode * 59 + UserPermissions.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
#pragma warning disable 1591

        public static bool operator ==(GetSavedViews200ResponseResultsInnerOwner left, GetSavedViews200ResponseResultsInnerOwner right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(GetSavedViews200ResponseResultsInnerOwner left, GetSavedViews200ResponseResultsInnerOwner right)
        {
            return !Equals(left, right);
        }

#pragma warning restore 1591
        #endregion Operators
    }
}
