/*
 * Paperless Rest Server
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using PaperlessREST.Entities.Converters;

namespace PaperlessREST.Entities
{
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
<<<<<<<< HEAD:src/PaperlessREST.Entities/InlineResponse20021Results.cs
    public partial class InlineResponse20021Results : IEquatable<InlineResponse20021Results>
========
    public partial class GetSavedViews200ResponseResultsInner : IEquatable<GetSavedViews200ResponseResultsInner>
>>>>>>>> dev:src/PaperlessREST.Entities/GetSavedViews200ResponseResultsInner.cs
    {
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [Required]
<<<<<<<< HEAD:src/PaperlessREST.Entities/InlineResponse20021Results.cs

        [DataMember(Name = "id")]
        public int? Id { get; set; }
========
        [DataMember(Name = "id", EmitDefaultValue = true)]
        public int Id { get; set; }
>>>>>>>> dev:src/PaperlessREST.Entities/GetSavedViews200ResponseResultsInner.cs

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [Required]
<<<<<<<< HEAD:src/PaperlessREST.Entities/InlineResponse20021Results.cs

        [DataMember(Name = "name")]
========
        [DataMember(Name = "name", EmitDefaultValue = false)]
>>>>>>>> dev:src/PaperlessREST.Entities/GetSavedViews200ResponseResultsInner.cs
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets ShowOnDashboard
        /// </summary>
        [Required]
<<<<<<<< HEAD:src/PaperlessREST.Entities/InlineResponse20021Results.cs

        [DataMember(Name = "show_on_dashboard")]
        public bool? ShowOnDashboard { get; set; }
========
        [DataMember(Name = "show_on_dashboard", EmitDefaultValue = true)]
        public bool ShowOnDashboard { get; set; }
>>>>>>>> dev:src/PaperlessREST.Entities/GetSavedViews200ResponseResultsInner.cs

        /// <summary>
        /// Gets or Sets ShowInSidebar
        /// </summary>
        [Required]
<<<<<<<< HEAD:src/PaperlessREST.Entities/InlineResponse20021Results.cs

        [DataMember(Name = "show_in_sidebar")]
        public bool? ShowInSidebar { get; set; }
========
        [DataMember(Name = "show_in_sidebar", EmitDefaultValue = true)]
        public bool ShowInSidebar { get; set; }
>>>>>>>> dev:src/PaperlessREST.Entities/GetSavedViews200ResponseResultsInner.cs

        /// <summary>
        /// Gets or Sets SortField
        /// </summary>
        [Required]
<<<<<<<< HEAD:src/PaperlessREST.Entities/InlineResponse20021Results.cs

        [DataMember(Name = "sort_field")]
========
        [DataMember(Name = "sort_field", EmitDefaultValue = false)]
>>>>>>>> dev:src/PaperlessREST.Entities/GetSavedViews200ResponseResultsInner.cs
        public string SortField { get; set; }

        /// <summary>
        /// Gets or Sets SortReverse
        /// </summary>
        [Required]
<<<<<<<< HEAD:src/PaperlessREST.Entities/InlineResponse20021Results.cs

        [DataMember(Name = "sort_reverse")]
        public bool? SortReverse { get; set; }
========
        [DataMember(Name = "sort_reverse", EmitDefaultValue = true)]
        public bool SortReverse { get; set; }
>>>>>>>> dev:src/PaperlessREST.Entities/GetSavedViews200ResponseResultsInner.cs

        /// <summary>
        /// Gets or Sets FilterRules
        /// </summary>
        [Required]
<<<<<<<< HEAD:src/PaperlessREST.Entities/InlineResponse20021Results.cs

        [DataMember(Name = "filter_rules")]
        public List<ApisavedViewsFilterRules> FilterRules { get; set; }
========
        [DataMember(Name = "filter_rules", EmitDefaultValue = false)]
        public List<GetSavedViews200ResponseResultsInnerFilterRulesInner> FilterRules { get; set; }
>>>>>>>> dev:src/PaperlessREST.Entities/GetSavedViews200ResponseResultsInner.cs

        /// <summary>
        /// Gets or Sets Owner
        /// </summary>
        [Required]
<<<<<<<< HEAD:src/PaperlessREST.Entities/InlineResponse20021Results.cs

        [DataMember(Name = "owner")]
        public InlineResponse20021Owner Owner { get; set; }
========
        [DataMember(Name = "owner", EmitDefaultValue = false)]
        public GetSavedViews200ResponseResultsInnerOwner Owner { get; set; }
>>>>>>>> dev:src/PaperlessREST.Entities/GetSavedViews200ResponseResultsInner.cs

        /// <summary>
        /// Gets or Sets UserCanChange
        /// </summary>
        [Required]
<<<<<<<< HEAD:src/PaperlessREST.Entities/InlineResponse20021Results.cs

        [DataMember(Name = "user_can_change")]
        public bool? UserCanChange { get; set; }
========
        [DataMember(Name = "user_can_change", EmitDefaultValue = true)]
        public bool UserCanChange { get; set; }
>>>>>>>> dev:src/PaperlessREST.Entities/GetSavedViews200ResponseResultsInner.cs

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetSavedViews200ResponseResultsInner {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  ShowOnDashboard: ").Append(ShowOnDashboard).Append("\n");
            sb.Append("  ShowInSidebar: ").Append(ShowInSidebar).Append("\n");
            sb.Append("  SortField: ").Append(SortField).Append("\n");
            sb.Append("  SortReverse: ").Append(SortReverse).Append("\n");
            sb.Append("  FilterRules: ").Append(FilterRules).Append("\n");
            sb.Append("  Owner: ").Append(Owner).Append("\n");
            sb.Append("  UserCanChange: ").Append(UserCanChange).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((GetSavedViews200ResponseResultsInner)obj);
        }

        /// <summary>
        /// Returns true if GetSavedViews200ResponseResultsInner instances are equal
        /// </summary>
        /// <param name="other">Instance of GetSavedViews200ResponseResultsInner to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetSavedViews200ResponseResultsInner other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return
                (
                    Id == other.Id ||

                    Id.Equals(other.Id)
                ) &&
                (
                    Name == other.Name ||
                    Name != null &&
                    Name.Equals(other.Name)
                ) &&
                (
                    ShowOnDashboard == other.ShowOnDashboard ||

                    ShowOnDashboard.Equals(other.ShowOnDashboard)
                ) &&
                (
                    ShowInSidebar == other.ShowInSidebar ||

                    ShowInSidebar.Equals(other.ShowInSidebar)
                ) &&
                (
                    SortField == other.SortField ||
                    SortField != null &&
                    SortField.Equals(other.SortField)
                ) &&
                (
                    SortReverse == other.SortReverse ||

                    SortReverse.Equals(other.SortReverse)
                ) &&
                (
                    FilterRules == other.FilterRules ||
                    FilterRules != null &&
                    other.FilterRules != null &&
                    FilterRules.SequenceEqual(other.FilterRules)
                ) &&
                (
                    Owner == other.Owner ||
                    Owner != null &&
                    Owner.Equals(other.Owner)
                ) &&
                (
                    UserCanChange == other.UserCanChange ||

                    UserCanChange.Equals(other.UserCanChange)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
<<<<<<<< HEAD:src/PaperlessREST.Entities/InlineResponse20021Results.cs
                if (Id != null)
                    hashCode = hashCode * 59 + Id.GetHashCode();
                if (Name != null)
                    hashCode = hashCode * 59 + Name.GetHashCode();
                if (ShowOnDashboard != null)
                    hashCode = hashCode * 59 + ShowOnDashboard.GetHashCode();
                if (ShowInSidebar != null)
                    hashCode = hashCode * 59 + ShowInSidebar.GetHashCode();
                if (SortField != null)
                    hashCode = hashCode * 59 + SortField.GetHashCode();
                if (SortReverse != null)
                    hashCode = hashCode * 59 + SortReverse.GetHashCode();
========

                hashCode = hashCode * 59 + Id.GetHashCode();
                if (Name != null)
                    hashCode = hashCode * 59 + Name.GetHashCode();

                hashCode = hashCode * 59 + ShowOnDashboard.GetHashCode();

                hashCode = hashCode * 59 + ShowInSidebar.GetHashCode();
                if (SortField != null)
                    hashCode = hashCode * 59 + SortField.GetHashCode();

                hashCode = hashCode * 59 + SortReverse.GetHashCode();
>>>>>>>> dev:src/PaperlessREST.Entities/GetSavedViews200ResponseResultsInner.cs
                if (FilterRules != null)
                    hashCode = hashCode * 59 + FilterRules.GetHashCode();
                if (Owner != null)
                    hashCode = hashCode * 59 + Owner.GetHashCode();
<<<<<<<< HEAD:src/PaperlessREST.Entities/InlineResponse20021Results.cs
                if (UserCanChange != null)
                    hashCode = hashCode * 59 + UserCanChange.GetHashCode();
========

                hashCode = hashCode * 59 + UserCanChange.GetHashCode();
>>>>>>>> dev:src/PaperlessREST.Entities/GetSavedViews200ResponseResultsInner.cs
                return hashCode;
            }
        }

        #region Operators
#pragma warning disable 1591

        public static bool operator ==(GetSavedViews200ResponseResultsInner left, GetSavedViews200ResponseResultsInner right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(GetSavedViews200ResponseResultsInner left, GetSavedViews200ResponseResultsInner right)
        {
            return !Equals(left, right);
        }

#pragma warning restore 1591
        #endregion Operators
    }
}
