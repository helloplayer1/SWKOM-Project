version: '1.0'

services:
  paperless-rest:
    container_name: paperless-rest
    build:
      context: .
      dockerfile: ./PaperlessREST.Dockerfile
      args:
        - configuration=Debug
    ports:
      - 8080:8080
    volumes:
      - ./src:/src
      - /src/bin
      - /src/obj
    depends_on:
      paperless-db:
        condition: service_healthy
      paperless-rabbitmq:
        condition: service_started
      paperless-minio:
        condition: service_started
      
  angular-app:
    image: nginx
    container_name: paperless-ui
    ports:
      - 80:80
    volumes:
      - ./src/paperless-ngx-ui/static:/usr/share/nginx/html/
      - ./src/config/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - paperless-rest

  paperless-minio:
    image: minio/minio
    container_name: paperless-minio
    restart: always
    environment:
      MINIO_ROOT_USER: paperless
      MINIO_ROOT_PASSWORD: paperless
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./data:/data
      - ./config:/root/.minio
    command: server --console-address ":9001" /data
    networks:
      - minio-net
      
  paperless-db:
    container_name: paperless-db
    image: postgres
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: paperless
    ports:
      - 1433:5432
    healthcheck:
      test: "pg_isready --username=paperless && psql --username=paperless --list"
      timeout: 10s
      retries: 20
    volumes:
      - db-data:/var/lib/postgressql/data
  
  paperless-rabbitmq:
    container_name: paperless-rabbitmq
    image: "rabbitmq:3-management"
    restart: always
    ports:
      - "8150:15672"
      - "5672:5672"
    hostname: rabbit

  paperless-ocr:
    container_name: paperless-ocr
    build:
      context: .
      dockerfile: ./ServiceAgent.Dockerfile
      args:
        - configuration=Debug
    volumes:
      - ./src:/src
      - /src/bin
      - /src/obj
    depends_on:
      paperless-db:
        condition: service_healthy
      paperless-rest:
        condition: service_started
      paperless-rabbitmq:
        condition: service_started
      paperless-minio:
        condition: service_started
   
  paperless-elasticsearch:
    container_name: paperless-elasticsearch
    image: elasticsearch:8.7.1
    environment:
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "xpack.security.enabled=false"
      - "xpack.security.enrollment.enabled=false"
    ports:
      - 9200:9200
      - 9300:9300
      
networks:
  minio-net:
    driver: bridge
volumes:
  db-data: